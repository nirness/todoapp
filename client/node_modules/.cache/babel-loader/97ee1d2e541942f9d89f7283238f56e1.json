{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport thunkPromiseHandler from \"../../scripts/thunkPromiseHandler\";\nexport const thunks = {\n  register: createAsyncThunk(\"users/register\", async (form, thunkAPI) => thunkPromiseHandler(axios.post(\"/api/users/register\", form), thunkAPI)),\n  login: createAsyncThunk(\"users/login\", async (form, thunkAPI) => thunkPromiseHandler(axios.post(\"/api/users/login\", form), thunkAPI))\n};\nexport const {\n  reducer,\n  actions\n} = createSlice({\n  name: \"users\",\n  initialState: {\n    isLoading: false,\n    user: null //{ email: \"niro@gmail.com\" }\n\n  },\n  reducers: {\n    logout() {//define later\n    }\n\n  },\n\n  extraReducers(_ref) {\n    let {\n      addCase\n    } = _ref;\n    addCase(thunks.register.fulfilled, (state, _ref2) => {\n      let {\n        payload: user\n      } = _ref2;\n      state.isLoading = false;\n      state.user = user;\n    });\n  }\n\n});\nconst helper = {\n  methods: [\"login\", \"register\"],\n\n  registerAnsLoginPending(state) {\n    state.isLoading = true;\n  },\n\n  registerAnsLoginFulfilled(state, _ref3) {\n    let {\n      payload: user\n    } = _ref3;\n    state.isLoading = false;\n    state.user = user;\n  },\n\n  registerAnsLoginRejected(state, _ref4) {\n    let {\n      payload: errorMessage\n    } = _ref4;\n    alert(errorMessage || \"Auth Rejected\");\n    state.isLoading = false;\n  }\n\n}; // addCase(thunks.register.rejected, (state, { payload:errorMessage }) => {\n//     alert(\"Error\", errorMessage)\n//     state.isLoading = false\n// }) \n// addCase(thunks.register.pending, (state) => {\n//     state.isLoading = true\n// }) \n// addCase(thunks.login.fulfilled, (state, { payload:user }) => {\n//     state.isLoading = false\n//     state.user = user\n// }) \n// addCase(thunks.login.rejected, (state, { payload:errorMessage }) => {\n//     alert(\"Error\", errorMessage)\n//     state.isLoading = false\n// })\n// addCase(thunks.login.pending, (state) => {\n//     state.isLoading = true\n// })","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","thunkPromiseHandler","thunks","register","form","thunkAPI","post","login","reducer","actions","name","initialState","isLoading","user","reducers","logout","extraReducers","addCase","fulfilled","state","payload","helper","methods","registerAnsLoginPending","registerAnsLoginFulfilled","registerAnsLoginRejected","errorMessage","alert"],"sources":["/Users/nirness/Desktop/mern-todos-application/client/src/global/slices/usersSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport  axios from \"axios\"\nimport thunkPromiseHandler from \"../../scripts/thunkPromiseHandler\"\n\nexport const thunks = {\n    register: createAsyncThunk(\"users/register\", async (form, thunkAPI) => (\n        thunkPromiseHandler(axios.post(\"/api/users/register\", form), thunkAPI)\n    )),\n    login: createAsyncThunk(\"users/login\", async (form, thunkAPI) => (\n        thunkPromiseHandler(axios.post(\"/api/users/login\", form), thunkAPI)\n    ))\n}\n\nexport const { reducer, actions } = createSlice({\n    name: \"users\", \n    initialState : {\n        isLoading : false, \n        user : null //{ email: \"niro@gmail.com\" }\n    },\n    reducers : {\n        logout() {\n            //define later\n        }\n    },\n    extraReducers({ addCase }) {\n        addCase(thunks.register.fulfilled, (state, { payload:user }) => {\n            state.isLoading = false\n            state.user = user\n        }) \n    }\n})\n\nconst helper = {\n    methods : [\"login\", \"register\"],\n    registerAnsLoginPending (state) {\n        state.isLoading = true\n    },\n    registerAnsLoginFulfilled (state, { payload:user }) {\n        state.isLoading = false\n        state.user = user\n    },\n    registerAnsLoginRejected (state, { payload:errorMessage }) {\n        alert(errorMessage || \"Auth Rejected\")\n        state.isLoading = false\n    }\n}\n\n// addCase(thunks.register.rejected, (state, { payload:errorMessage }) => {\n//     alert(\"Error\", errorMessage)\n//     state.isLoading = false\n// }) \n// addCase(thunks.register.pending, (state) => {\n//     state.isLoading = true\n// }) \n// addCase(thunks.login.fulfilled, (state, { payload:user }) => {\n//     state.isLoading = false\n//     state.user = user\n// }) \n// addCase(thunks.login.rejected, (state, { payload:errorMessage }) => {\n//     alert(\"Error\", errorMessage)\n//     state.isLoading = false\n// })\n// addCase(thunks.login.pending, (state) => {\n//     state.isLoading = true\n// }) "],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAQC,KAAR,MAAmB,OAAnB;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AAEA,OAAO,MAAMC,MAAM,GAAG;EAClBC,QAAQ,EAAEJ,gBAAgB,CAAC,gBAAD,EAAmB,OAAOK,IAAP,EAAaC,QAAb,KACzCJ,mBAAmB,CAACD,KAAK,CAACM,IAAN,CAAW,qBAAX,EAAkCF,IAAlC,CAAD,EAA0CC,QAA1C,CADG,CADR;EAIlBE,KAAK,EAAER,gBAAgB,CAAC,aAAD,EAAgB,OAAOK,IAAP,EAAaC,QAAb,KACnCJ,mBAAmB,CAACD,KAAK,CAACM,IAAN,CAAW,kBAAX,EAA+BF,IAA/B,CAAD,EAAuCC,QAAvC,CADA;AAJL,CAAf;AASP,OAAO,MAAM;EAAEG,OAAF;EAAWC;AAAX,IAAuBX,WAAW,CAAC;EAC5CY,IAAI,EAAE,OADsC;EAE5CC,YAAY,EAAG;IACXC,SAAS,EAAG,KADD;IAEXC,IAAI,EAAG,IAFI,CAEC;;EAFD,CAF6B;EAM5CC,QAAQ,EAAG;IACPC,MAAM,GAAG,CACL;IACH;;EAHM,CANiC;;EAW5CC,aAAa,OAAc;IAAA,IAAb;MAAEC;IAAF,CAAa;IACvBA,OAAO,CAACf,MAAM,CAACC,QAAP,CAAgBe,SAAjB,EAA4B,CAACC,KAAD,YAA6B;MAAA,IAArB;QAAEC,OAAO,EAACP;MAAV,CAAqB;MAC5DM,KAAK,CAACP,SAAN,GAAkB,KAAlB;MACAO,KAAK,CAACN,IAAN,GAAaA,IAAb;IACH,CAHM,CAAP;EAIH;;AAhB2C,CAAD,CAAxC;AAmBP,MAAMQ,MAAM,GAAG;EACXC,OAAO,EAAG,CAAC,OAAD,EAAU,UAAV,CADC;;EAEXC,uBAAuB,CAAEJ,KAAF,EAAS;IAC5BA,KAAK,CAACP,SAAN,GAAkB,IAAlB;EACH,CAJU;;EAKXY,yBAAyB,CAAEL,KAAF,SAA2B;IAAA,IAAlB;MAAEC,OAAO,EAACP;IAAV,CAAkB;IAChDM,KAAK,CAACP,SAAN,GAAkB,KAAlB;IACAO,KAAK,CAACN,IAAN,GAAaA,IAAb;EACH,CARU;;EASXY,wBAAwB,CAAEN,KAAF,SAAmC;IAAA,IAA1B;MAAEC,OAAO,EAACM;IAAV,CAA0B;IACvDC,KAAK,CAACD,YAAY,IAAI,eAAjB,CAAL;IACAP,KAAK,CAACP,SAAN,GAAkB,KAAlB;EACH;;AAZU,CAAf,C,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}