{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { axios } from \"axios\";\nexport const register = createAsyncThunk(\"users/register\", (form, thunkAPI) => {\n  axios.post(\"/api/users/register\");\n  return Promise;\n}); //const loginThunk = createAsyncThunk(\"\")\n\nexport const {\n  reducer,\n  actions\n} = createSlice({\n  name: \"users\",\n  initialState: {\n    isLoading: false,\n    user: null //{ email: \"niro@gmail.com\" }\n\n  },\n  reducers: {\n    logout() {//define later\n    }\n\n  },\n\n  extraReducers() {//define later\n  }\n\n});","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","register","form","thunkAPI","post","Promise","reducer","actions","name","initialState","isLoading","user","reducers","logout","extraReducers"],"sources":["/Users/nirness/Desktop/mern-todos-application/client/src/global/slices/usersSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport { axios } from \"axios\"\n\nexport const register = createAsyncThunk(\"users/register\", (form, thunkAPI) => {\n    axios.post(\"/api/users/register\")\n    return Promise\n})\n//const loginThunk = createAsyncThunk(\"\")\n\nexport const { reducer, actions } = createSlice({\n    name: \"users\", \n    initialState : {\n        isLoading : false, \n        user : null //{ email: \"niro@gmail.com\" }\n    },\n    reducers : {\n        logout() {\n            //define later\n        }\n    },\n    extraReducers() {\n        //define later\n    }\n})"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,SAASC,KAAT,QAAsB,OAAtB;AAEA,OAAO,MAAMC,QAAQ,GAAGF,gBAAgB,CAAC,gBAAD,EAAmB,CAACG,IAAD,EAAOC,QAAP,KAAoB;EAC3EH,KAAK,CAACI,IAAN,CAAW,qBAAX;EACA,OAAOC,OAAP;AACH,CAHuC,CAAjC,C,CAIP;;AAEA,OAAO,MAAM;EAAEC,OAAF;EAAWC;AAAX,IAAuBT,WAAW,CAAC;EAC5CU,IAAI,EAAE,OADsC;EAE5CC,YAAY,EAAG;IACXC,SAAS,EAAG,KADD;IAEXC,IAAI,EAAG,IAFI,CAEC;;EAFD,CAF6B;EAM5CC,QAAQ,EAAG;IACPC,MAAM,GAAG,CACL;IACH;;EAHM,CANiC;;EAW5CC,aAAa,GAAG,CACZ;EACH;;AAb2C,CAAD,CAAxC"},"metadata":{},"sourceType":"module"}